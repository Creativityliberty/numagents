[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "num-agents"
version = "0.1.0"
description = "NÃ¼m Agents: A dynamic agent orchestration framework"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "Proprietary" }
authors = [
    { name = "NUMTEMA", email = "info@numtema.com" }
]
keywords = ["agents", "ai", "orchestration", "framework", "num"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "pyyaml>=6.0",
    "typer[all]>=0.9.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "black>=23.0.0",
    "ruff>=0.0.1",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.5.0",
    "bandit[toml]>=1.7.5",
    "types-PyYAML>=6.0.0",
]
knowledge = [
    "openai>=1.0.0",
]
all = [
    "openai>=1.0.0",
]

[project.scripts]
num-agents = "num_agents.cli:app"

[tool.hatch.build.targets.wheel]
packages = ["num_agents"]

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100
select = ["E", "F", "B"]
ignore = []

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
exclude = ["tests/"]

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true
known_first_party = ["num_agents"]

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--strict-markers",
    "--cov=num_agents",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]

[tool.coverage.run]
source = ["num_agents"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
]

[tool.coverage.html]
directory = "htmlcov"
